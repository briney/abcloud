{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"SpotIn",
				"SpotInstanceRequestIds"
			],
			[
				"forward",
				"forward_port_keyfile"
			],
			[
				"iden",
				"identity_file	statement"
			],
			[
				"identity",
				"identity_file"
			],
			[
				"cluster",
				"cluster_name	param"
			],
			[
				"filter",
				"filterwarnings	function"
			],
			[
				"Run",
				"RuntimeError	class"
			],
			[
				"ec2",
				"ec2_utils"
			],
			[
				"setup",
				"setup_mongodb	function"
			],
			[
				"write",
				"write_config_info	function"
			],
			[
				"profile",
				"profile_config_cmd	statement"
			],
			[
				"check",
				"check_call	function"
			],
			[
				"mas",
				"master_ebs_raid_dir"
			],
			[
				"master_eb",
				"master_ebs_volume_num"
			],
			[
				"public",
				"public_ip_address"
			],
			[
				"prog",
				"progress_bar	function"
			],
			[
				"master",
				"master_ebs_raid_level"
			],
			[
				"master_ebs",
				"master_ebs_raid_level"
			],
			[
				"master_e",
				"master_ebs_volume_num"
			],
			[
				"master_g",
				"master_group_name	statement"
			],
			[
				"wrker",
				"worker_permissions	statement"
			],
			[
				"revo",
				"revoke_ingress"
			],
			[
				"device",
				"device_map	statement"
			],
			[
				"devi",
				"device_name	statement"
			],
			[
				"master_block_",
				"master_block_device_mappings	statement"
			],
			[
				"request",
				"request_spot_instance"
			],
			[
				"sec",
				"security_group	param"
			],
			[
				"master_grou",
				"master_group_name	statement"
			],
			[
				"pro",
				"property	class"
			],
			[
				"auth",
				"authorize_egress"
			],
			[
				"_au",
				"_authorize_worker_ports"
			],
			[
				"pri",
				"private_ips	statement"
			],
			[
				"subn",
				"subnet_id	statement"
			],
			[
				"copy",
				"copy_aws_credentials	statement"
			],
			[
				"addi",
				"additional_security_group	statement"
			],
			[
				"autho",
				"authorized_address"
			],
			[
				"user",
				"user_data	param"
			],
			[
				"remote",
				"remotepath	statement"
			],
			[
				"local",
				"localpath"
			],
			[
				"jupy",
				"jupyter_password	statement"
			],
			[
				"jpy",
				"jupyter_password"
			],
			[
				"jup",
				"jupyter"
			],
			[
				"dele",
				"delete_groups	param"
			],
			[
				"delet",
				"delete_groups"
			],
			[
				"bases",
				"basespace_credentials	statement"
			],
			[
				"remove",
				"remove_nodes	statement"
			],
			[
				"spot",
				"spot_price"
			],
			[
				"place",
				"placement_group	statement"
			],
			[
				"ebs_v",
				"ebs_vol_num"
			],
			[
				"ebs_vo",
				"ebs_vol_size	param"
			],
			[
				"masd",
				"master_ebs_raid_level	statement"
			],
			[
				"master_d",
				"master_ebs_raid_level	param"
			],
			[
				"abtools",
				"abtools_verion	statement"
			],
			[
				"get_clu",
				"get_cluster_seqs	function"
			],
			[
				"Name",
				"NamedTemporaryFile	function"
			],
			[
				"tem",
				"temp"
			],
			[
				"make",
				"make_seq_db	param"
			],
			[
				"add",
				"add_argument	function"
			],
			[
				"bin",
				"bincount	function"
			],
			[
				"_score",
				"_score_mismatch	statement"
			],
			[
				"_get",
				"_get_matrix_file	function"
			],
			[
				"_bu",
				"_build_matrix_from_params	function"
			],
			[
				"_dele",
				"_delete_score_matrix	statement"
			],
			[
				"print",
				"print_level	param"
			],
			[
				"update",
				"update_progress	function"
			],
			[
				"germ",
				"germs	statement"
			],
			[
				"lar",
				"only_largest_cluster"
			],
			[
				"parse",
				"parse_uaids	statement"
			],
			[
				"delim",
				"delim_occurance	param"
			],
			[
				"delim1",
				"delim1_occurance	param"
			],
			[
				"m",
				"mkstemp	function"
			],
			[
				"temp",
				"tempfile	module"
			],
			[
				"i",
				"isfile	function"
			],
			[
				"_get_sequen",
				"_get_sequence_ids"
			],
			[
				"global",
				"global_alignment	import"
			],
			[
				"_get_cluster",
				"_get_cluster_seqs	function"
			],
			[
				"alignment",
				"alignment_midline"
			],
			[
				"score_gap_",
				"score_gap_open_penalty	param"
			],
			[
				"_alignment",
				"_alignment_midline	function"
			],
			[
				"_gap",
				"_gap_open"
			],
			[
				"gap_e",
				"gap_extend_penalty"
			],
			[
				"align",
				"alignment_file"
			],
			[
				"c",
				"clwstrict"
			],
			[
				"fasta",
				"fasta_file	statement"
			],
			[
				"mini",
				"minimum_cluster_fraction"
			],
			[
				"minimum",
				"minimum_well_size"
			],
			[
				"min",
				"minimum_cluster_fraction	statement"
			],
			[
				"ind",
				"index_position	statement"
			],
			[
				"score",
				"score_cutoff_light	statement"
			],
			[
				"cluster_gradie",
				"cluster_cutoff_gradient"
			],
			[
				"minimum_we",
				"minimum_well_size_denom"
			],
			[
				"scpcr",
				"scpcr_demultiplexing	module"
			],
			[
				"only",
				"only_largest_cluster"
			],
			[
				"mongo",
				"mongo_input_dir	statement"
			],
			[
				"panda",
				"pandaseq_algo	param"
			],
			[
				"pandaseq",
				"pandaseq_algo"
			],
			[
				"pixel",
				"pixel_msa	function"
			],
			[
				"pix",
				"make_alignment_pixel"
			],
			[
				"raw",
				"raw_sequence_dir"
			],
			[
				"minim",
				"minimum_well_size"
			],
			[
				"mini_well",
				"minimum_well_size"
			],
			[
				"ascii",
				"ascii_uppercase	statement"
			],
			[
				"cd",
				"cdhit_threshold"
			],
			[
				"scor",
				"score_cutoff_heavy"
			],
			[
				"index",
				"index_position"
			],
			[
				"plate",
				"plate_map"
			],
			[
				"as",
				"ascii_uppercase	statement"
			],
			[
				"print_collection",
				"print_collection_group_info"
			],
			[
				"collection",
				"collection_prefix_position"
			],
			[
				"prefix",
				"collection_prefix_split"
			],
			[
				"_launch",
				"_launch_workers	function"
			],
			[
				"dis",
				"distribute_ssh_keys_progbar	function"
			],
			[
				"junc",
				"junction_aa"
			],
			[
				"rem",
				"remote_path	statement"
			],
			[
				"basespace",
				"basespace_credentials"
			],
			[
				"celery",
				"celery_info_cmd	statement"
			],
			[
				"get_all",
				"get_all_security_groups"
			],
			[
				"mongod",
				"mongod_start_cmd	statement"
			],
			[
				"setup_",
				"setup_mongodb"
			],
			[
				"start",
				"start_celery_workers	function"
			],
			[
				"get_i",
				"get_ip_address	function"
			],
			[
				"run",
				"run_remote_cmd	function"
			],
			[
				"js",
				"json_lookup	function"
			],
			[
				"master_celery",
				"master_celery_processes"
			],
			[
				"get",
				"get_dns_name"
			],
			[
				"EBS",
				"EBSBlockDeviceType"
			],
			[
				"worker",
				"worker_nodes"
			],
			[
				"pint",
				"print_function	statement"
			]
		]
	},
	"buffers":
	[
		{
			"file": "MANIFEST.in",
			"settings":
			{
				"buffer_size": 60,
				"line_ending": "Unix"
			}
		},
		{
			"file": "setup.py",
			"settings":
			{
				"buffer_size": 535,
				"line_ending": "Unix"
			}
		},
		{
			"file": "abcloud/abcloud.py",
			"settings":
			{
				"buffer_size": 20066,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bin/abcloud",
			"settings":
			{
				"buffer_size": 1464,
				"line_ending": "Unix"
			}
		},
		{
			"file": "abcloud/__init__.py",
			"settings":
			{
				"buffer_size": 103,
				"line_ending": "Unix"
			}
		},
		{
			"file": "abcloud/utils/ec2utils.py",
			"settings":
			{
				"buffer_size": 7368,
				"line_ending": "Unix"
			}
		},
		{
			"file": "abcloud/utils/list_instances.py",
			"settings":
			{
				"buffer_size": 5908,
				"line_ending": "Unix"
			}
		},
		{
			"file": "abcloud/utils/cluster.py",
			"settings":
			{
				"buffer_size": 38406,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Package Control Messages\n========================\n\nAnaconda\n--------\n\n  Changes in 1.4.18\n  =================\n  \n  ## Fixes:\n      - Fixed exception on lint when filename was None\n      - Fixed compability issue with afuse\n      - Fixed bad auto import behavior when there was no `def` or `class`,\n        resolves #434\n      - Escape Python Interpreter in build system\n      - Autoformat now saves the buffer, resolves #420\n      - Added more verbosity and better error messaging on exceptions\n  \n  \n  For more detailed information about those changes run git log v1.4.17..v1.4.18 on git repository\n",
			"settings":
			{
				"buffer_size": 600,
				"line_ending": "Unix",
				"name": "Package Control Messages",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"file": "abcloud/utils/config.py",
			"settings":
			{
				"buffer_size": 5236,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 247.0,
		"last_filter": "save",
		"selected_items":
		[
			[
				"save",
				"Project: Save As"
			],
			[
				"add",
				"Project: Add Folder"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: remov",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/bryanbriney/git/abcloud",
		"/Users/bryanbriney/git/abcloud/abcloud",
		"/Users/bryanbriney/git/abcloud/abcloud/utils",
		"/Users/bryanbriney/git/abcloud/bin"
	],
	"file_history":
	[
		"/Users/bryanbriney/git/abcloud/abcloud/utils/progbar.py",
		"/Users/bryanbriney/git/abcloud/abcloud/utils/ssh_tunnel.py",
		"/Users/bryanbriney/git/abcloud/abcloud/utils/__init__.py",
		"/Users/bryanbriney/old git/seqtools/cdhit.py",
		"/Users/bryanbriney/git/abtools/abtools/utils/s3.py",
		"/Users/bryanbriney/git/abtools/abtools/utils/log.py",
		"/Users/bryanbriney/git/abtools/abtools/utils/color.py",
		"/Users/bryanbriney/git/abtools/abtools/utils/cluster.py",
		"/Users/bryanbriney/git/abtools/abtools/utils/pipeline.py",
		"/Users/bryanbriney/git/abtools/abtools/utils/sequence.py",
		"/Users/bryanbriney/git/abtools/abtools/utils/alignment.py",
		"/Users/bryanbriney/git/abtools/abtools/utils/germlines.py",
		"/Users/bryanbriney/git/abtools/abtools/utils/mongodb.py",
		"/Users/bryanbriney/git/abcloud/utils/config.py",
		"/Users/bryanbriney/git/abcloud/abcloud.py",
		"/Users/bryanbriney/git/abtools/bin/ab_correct",
		"/Users/bryanbriney/git/abtools/bin/ab_compare",
		"/Users/bryanbriney/git/abtools/abtools.sublime-project",
		"/Users/bryanbriney/git/abtools/.gitignore",
		"/Users/bryanbriney/git/abtools/abtools/ab_compare/ab_compare.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/basespace.py",
		"/Users/bryanbriney/git/abstar/abstar/__init__.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/__init__.py",
		"/Users/bryanbriney/git/abstar/abstar/abstar.py",
		"/Users/bryanbriney/git/abcloud/utils/progbar.py",
		"/Users/bryanbriney/git/scPCR-utils/excel_platemap_parser/containers.py",
		"/Users/bryanbriney/git/scPCR-utils/excel_platemap_parser/excel_platemap_parser.py",
		"/Users/bryanbriney/git/vaxtools/setup.py",
		"/Users/bryanbriney/git/vaxtools/README.md",
		"/Users/bryanbriney/git/vaxtools/MANIFEST.in",
		"/Users/bryanbriney/git/vaxtools/vaxtools/scPCR/excel_platemap_parser.py",
		"/Users/bryanbriney/git/vaxtools/vaxtools/scPCR/__init__.py",
		"/Users/bryanbriney/git/vaxtools/vaxtools/__init__.py",
		"/Users/bryanbriney/git/vaxtools/vaxtools/utils/pixel.py",
		"/Users/bryanbriney/git/vaxtools/vaxtools/utils/__init__.py",
		"/Users/bryanbriney/git/vaxtools/vaxtools/utils/mongodb.py",
		"/Users/bryanbriney/git/vaxtools/vaxtools/utils/s3.py",
		"/Users/bryanbriney/git/vaxtools/vaxtools/utils/sequence.py",
		"/Users/bryanbriney/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/bryanbriney/git/vaxtools/vaxtools/utils/alignment.py",
		"/Users/bryanbriney/git/vaxtools/vaxtools/scPCR/scpcr_demultiplexing.py",
		"/Users/bryanbriney/git/abstar/MANIFEST.in",
		"/Users/bryanbriney/git/abstar/setup.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/queue/tasks.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/queue/celery.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/regions.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/vdj.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/sequence.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/productivity.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/pandaseq.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/output.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/mutations.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/isotype.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/alignment.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/mongoimport.py",
		"/Users/bryanbriney/git/abtools/abtools/ab_finder/ab_finder.py",
		"/Users/bryanbriney/git/abtools/abtools/ab_correct/ab_correct.py",
		"/Users/bryanbriney/git/abtools/abtools/ab_phylogeny/utils/msa.py",
		"/Users/bryanbriney/git/abtools/abtools/ab_phylogeny/ab_phylogeny.py",
		"/Users/bryanbriney/git/abtools/abtools/ab_stats/germlines.py",
		"/Users/bryanbriney/git/abtools/abtools/ab_stats/ab_stats.py",
		"/Users/bryanbriney/git/abtools/MANIFEST.in",
		"/Users/bryanbriney/git/abtools/setup.py",
		"/Users/bryanbriney/git/abtools/abtools/__init__.py",
		"/Users/bryanbriney/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/bryanbriney/git/abstar/abstar/ssw/ssw_wrap.py",
		"/Users/bryanbriney/git/abcloud/utils/list_instances.py",
		"/Users/bryanbriney/git/abcloud/utils/cluster.py",
		"/Users/bryanbriney/git/abcloud/utils/ec2utils.py",
		"/Users/bryanbriney/git/clonify/clonify_c/clonify.py",
		"/Users/bryanbriney/git/vaxtools/vaxtools/scPCR/alignment.py",
		"/Users/bryanbriney/git/vaxtools/vaxtools/scPCR/pixel.py",
		"/Users/bryanbriney/git/scPCR-utils/demultiplexing/scpcr_demultiplexing.py",
		"/Users/bryanbriney/git/abtools/ab_compare/ab_compare.py",
		"/Users/bryanbriney/git/abtools/ab_finder/ab_finder.py",
		"/Users/bryanbriney/git/abtools/ab_finder/utils/identity.py",
		"/Users/bryanbriney/git/abtools/ab_phylogeny/utils/timepoint.py",
		"/Users/bryanbriney/git/abtools/ab_phylogeny/utils/tree.py",
		"/Users/bryanbriney/git/abtools/ab_phylogeny/utils/msa.py",
		"/Users/bryanbriney/git/abtools/ab_phylogeny/ab_phylogeny.py",
		"/Users/bryanbriney/git/abtools/ab_correct/ab_correct.py",
		"/Users/bryanbriney/Downloads/an_example_pypi_project-0.0.5/an_example_pypi_project/__init__.py",
		"/Users/bryanbriney/git/abtools/abtools/ab_stats/__init__.py",
		"/Users/bryanbriney/git/abtools/abtools/ab_phylogeny/utils/tree.py",
		"/Users/bryanbriney/git/abtools/abtools/ab_phylogeny/utils/timepoint.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/junction.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/indels.py",
		"/Users/bryanbriney/git/abstar/bin/abstar",
		"/Users/bryanbriney/git/abstar/abstar/ssw/__init__.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/bs_downloader.py",
		"/Users/bryanbriney/git/abstar/bin/abstar.py",
		"/Users/bryanbriney/Downloads/nwalign-0.3.1/nwalign/__init__.py",
		"/Users/bryanbriney/git/ab-blast/utils/basespace.py",
		"/Users/bryanbriney/git/ab-blast/abstar.py",
		"/Users/bryanbriney/git/ab-blast/utils/mongoimport.py",
		"/Users/bryanbriney/git/abstar/abstar/utils/batch_merge.py",
		"/Users/bryanbriney/Google_Drive/burton_lab/Projects/kymab_scPCR_061715/__init__.py",
		"/Users/bryanbriney/Google_Drive/burton_lab/Projects/scPCR_demultiplexing/scpcr_demultiplexing.py",
		"/Users/bryanbriney/git/ab-analysis/initial_analysis/blast_parse.py",
		"/Users/bryanbriney/Downloads/vizqes-0.9.2/vizqespkg/vizqes_main.py",
		"/Users/bryanbriney/Downloads/Enrich-0.2/enrich/read_aligner.py",
		"/Users/bryanbriney/Downloads/Enrich-0.2/enrich/enrich_config.py",
		"/Users/bryanbriney/Downloads/Enrich-0.2/enrich/enrich.py",
		"/Users/bryanbriney/Downloads/Enrich-0.2/enrich/enrich_xml_parser.py",
		"/Users/bryanbriney/Downloads/Enrich-0.2/enrich/read_fuser.py",
		"/Users/bryanbriney/Downloads/Enrich-0.2/README",
		"/Users/bryanbriney/git/abtools/ab_stats/ab_stats.py",
		"/Users/bryanbriney/git/clonify/clonify_c/utils/nr.py",
		"/Users/bryanbriney/Google_Drive/burton_lab/Projects/clonify_in_c++/antibody-v3/cluster.cpp",
		"/Users/bryanbriney/Google_Drive/burton_lab/Projects/scPCR_demultiplexing/excel_platemap_parser/containers.py",
		"/Users/bryanbriney/git/ab-blast/utils/__init__.py",
		"/Users/bryanbriney/Downloads/Enrich-0.2/setup.py",
		"/Users/bryanbriney/git/ab-blast/utils/output.py",
		"/Users/bryanbriney/git/ab-blast/utils/junction.py",
		"/Users/bryanbriney/git/ab-blast/utils/sequence.py",
		"/Users/bryanbriney/git/ab-blast/utils/vdj.py",
		"/Users/bryanbriney/git/ab-blast/utils/make_basespace_credfile.py",
		"/Users/bryanbriney/git/ab-blast/utils/productivity.py",
		"/Users/bryanbriney/git/ab-blast/utils/bs_downloader.py",
		"/Users/bryanbriney/git/ab-blast/utils/pandaseq.py",
		"/Users/bryanbriney/git/ab-blast/utils/starcluster.py",
		"/Users/bryanbriney/git/ec2_cluster/utils/config.py",
		"/Users/bryanbriney/git/ec2_cluster/utils/node.py",
		"/Users/bryanbriney/git/ec2_cluster/utils/ec2utils.py",
		"/Users/bryanbriney/git/ec2_cluster/utils/cluster.py",
		"/Users/bryanbriney/git/ec2_cluster/utils/list_instances.py",
		"/Users/bryanbriney/git/ec2_cluster/abcloud.py",
		"/Users/bryanbriney/git/ab-blast/utils/batch_merge.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"key",
			"opts",
			"mips",
			"MASTER_INSTANCE_TYPE",
			"WORKER_INSTANCE_TYPE",
			"\\t",
			"verbose",
			"options",
			"add_option",
			"    ",
			"progbar",
			"    ",
			"logger.info",
			"start",
			"retrieve_cluster",
			"string.letters",
			"action",
			"cluster_name",
			"from abtools import log\n# logger = log.get_logger('ec2_utils')",
			"Name",
			"existing_",
			"master",
			"get_instances",
			"ec2_utils",
			"xrange",
			"raw_input",
			"HTTPError",
			"Request",
			"urlopen",
			"urllib2",
			"traceback",
			"time",
			"itertools",
			"pipes",
			"textwrap",
			"self.put",
			"-l",
			"opts",
			"add_option",
			"mount_location",
			"opts",
			"vol",
			"self.opts.master_ebs_raid_dir",
			"all_nodes",
			"master",
			"file=stderr",
			"stderr",
			"security_group",
			"inst",
			"master",
			"master_group",
			" master_group",
			"security_groups",
			"sgroups",
			"    ",
			"self.conn",
			"ec2s",
			"authorized_address",
			"master_group",
			"worker_group",
			"opts",
			" opts",
			"opts",
			"authorized_address",
			"worker_group",
			"master_group",
			"ec2",
			"boto",
			"make_sim_plot",
			"logging",
			"get_collection_pairs",
			"args.output",
			"vdj_field",
			"')\n",
			"from alignment",
			"from global_",
			"    ",
			" )",
			"( ",
			"score_",
			"self._matrix",
			"provided",
			"update",
			"regroup",
			"get_consensus",
			"sys.stdout.flush()",
			"do_cdhit",
			"remove_sqlite_db",
			"print",
			"tempfile",
			"compress",
			"print",
			"log",
			" \n",
			"print",
			"utils",
			"direc",
			"temp_dir",
			"query",
			"germlines",
			"self.",
			"query_",
			"self.matri",
			"seq)",
			"seq",
			"type(target)",
			"Aligner",
			"os.path.dirname",
			"os.path.dirname(\n",
			" os.path.dirname(\n",
			" \n",
			"= ",
			"logg",
			"print",
			"loggind",
			"print",
			"_open",
			"fasta_string =",
			":\n",
			"db",
			"random_sample_no_replacement",
			"mod_dir",
			"utils/",
			"Aligner",
			"utils",
			"    ",
			"minimum_well_size",
			"minimum_cluster_size"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"    ",
			"\\t",
			"print",
			"ec2utils",
			"\\t",
			")",
			"()",
			"(",
			"\\t",
			"\\n",
			"worker",
			"opts.workers",
			"	"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 9,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "MANIFEST.in",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 60,
						"regions":
						{
						},
						"selection":
						[
							[
								53,
								53
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "setup.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 535,
						"regions":
						{
						},
						"selection":
						[
							[
								509,
								509
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "abcloud/abcloud.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20066,
						"regions":
						{
						},
						"selection":
						[
							[
								15607,
								15607
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 530.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "bin/abcloud",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1464,
						"regions":
						{
						},
						"selection":
						[
							[
								1408,
								1408
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "abcloud/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 103,
						"regions":
						{
						},
						"selection":
						[
							[
								103,
								103
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "abcloud/utils/ec2utils.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7368,
						"regions":
						{
						},
						"selection":
						[
							[
								1690,
								1690
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 242.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "abcloud/utils/list_instances.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5908,
						"regions":
						{
						},
						"selection":
						[
							[
								2604,
								2604
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 531.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "abcloud/utils/cluster.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38406,
						"regions":
						{
						},
						"selection":
						[
							[
								9950,
								9950
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 404.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 8,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 600,
						"regions":
						{
						},
						"selection":
						[
							[
								600,
								600
							]
						],
						"settings":
						{
							"auto_indent": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_width": 2,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "abcloud/utils/config.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5236,
						"regions":
						{
						},
						"selection":
						[
							[
								3721,
								3721
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1415.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "abcloud.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 198.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
